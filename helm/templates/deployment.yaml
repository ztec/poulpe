apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.app }}"
  labels:
    app: {{ .Values.app }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
        release: {{ .Release.Name }}
      annotations:
        date/deploy-date: {{ now | quote }}
        {{- if .Values.prometheus.active }}
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.port }}"
        {{- end }}
    spec:
      imagePullSecrets:
        - name: git2.riper.fr-key
      containers:
        - name: {{ .Release.Name }}
          image: "{{ required "image.name is required, specify it with --set-string image.name=toto:label" .Values.image.name }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" }}
          env:
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 5
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 5
            periodSeconds: 3
          resources:
{{ toYaml .Values.resources | indent 12 }}

